-- Report to find products that would be due for autodelisting but missing --

WITH
  ----------------------------------------------------------------
  -- 0) (Optional) your original filter on WLK1 for DC-level rows
  filtered_wlk1 AS (
    SELECT *
      FROM WLK1
     WHERE FILIA LIKE 'GD%'
  ),

  ----------------------------------------------------------------
  -- 1) isolate *only* the WLK1 entries that are currently valid
  valid_listings AS (
    SELECT
      ARTNR,
      FILIA      AS GroupID
    FROM WLK1
    WHERE DATAB   <= CURRENT_DATE
      AND DATBI  >= CURRENT_DATE
  ),

  ----------------------------------------------------------------
  -- 2) find all stores in each of those WLK1 groups
  store_group AS (
    SELECT
      Z.ASORT    AS GroupID,
      Z.LOCNR    AS StoreCode
    FROM WRSZ Z
    WHERE Z.DATAB   <= CURRENT_DATE
      AND Z.DATBI  >= CURRENT_DATE
  ),

  ----------------------------------------------------------------
  -- 3) find all stores that each DC actually supplies
  dc_supply AS (
    SELECT
      R.LOCLB    AS DC,
      R.LOCNR    AS StoreCode
    FROM WRF3 R
    WHERE R.LOCLB LIKE 'GD%' and R.DATAB   <= CURRENT_DATE
      AND R.DATBI  >= CURRENT_DATE and (r.matkl is null or r.matkl = '')
      
  ),

  ----------------------------------------------------------------
  -- 4) stitch 1→2→3 to get every (ARTNR,DC) that has *any* store listing
  listing_per_dc AS (
    SELECT DISTINCT
      VL.ARTNR,
      DS.DC
    FROM valid_listings VL
    JOIN store_group SG
      ON SG.GroupID   = VL.GroupID
    JOIN dc_supply DS
      ON DS.StoreCode = SG.StoreCode
  ),

  -- 5) your main payload, now with a 1/0 flag from listing_per_dc
  base_data AS (
    SELECT
      RIGHT(w.ARTNR,6)         AS Display_ID,
      case when SUBSTRING(MVKE.PRODH,5,1) = '1' then 'Core' when SUBSTRING(MVKE.PRODH,5,1) = '3' then 'Seasonal' else '' end as Hierarchy,
      dc.WERKS                 AS DC,
      dc.MMSTA                 AS DC_Status,
      dc.MMSTD                 AS DCStatusValidFrom,
      store.WERKS              AS Store,
      store.MMSTA              AS Store_Status,
      store.MMSTD              AS StoreStatusValidFrom,
      mard.LABST               AS MARD_DC_Stock,
      CAST( Nmard.LABST AS INTEGER )               AS DC_Stock,
      CASE 
        WHEN (po.LOEKZ <> 'L' 
              AND (po.ELIKZ = '' OR po.BWART IS NULL)) 
        THEN 'X' 
        ELSE '' 
      END                       AS OpenPos,
      MAKT.MAKTX               AS Product_Description,
      po.EBELN                 AS LatestPO,
      po.EINDT                 AS PODeliveryDate,
      T024.EKNAM               AS BuyingDirector,

      -- ←←← This is the new bit ←←←
      CASE 
        WHEN lpd.ARTNR IS NOT NULL THEN 1
        ELSE 0
      END                      AS AnyStoreValidListingFlag,

     CASE 
        WHEN SUM(
               CASE WHEN store.MMSTA <> '30' THEN 1 ELSE 0 END
             ) OVER (PARTITION BY w.ARTNR, dc.WERKS) = 0
        THEN 1
        ELSE 0
      END                      AS AllStoresStatus30Flag

    FROM filtered_wlk1 w

      LEFT JOIN WRF3       r   ON r.LOCLB = w.FILIA

        and  R.LOCLB LIKE 'GD%' and R.DATAB   <= CURRENT_DATE
      AND R.DATBI  >= CURRENT_DATE and (r.matkl is null or r.matkl = '')



      LEFT JOIN MARC       dc  ON dc.MATNR = w.ARTNR 
                             AND dc.WERKS = w.FILIA 
                             AND dc.MMSTA IN ('20','21','30')
      inner JOIN MARC       store 
                             ON store.MATNR = w.ARTNR 
                            AND store.WERKS = r.LOCNR 
                            
      LEFT JOIN MARD       mard 
                             ON mard.MATNR = w.ARTNR 
                            AND mard.WERKS = w.FILIA 
                            AND mard.LGORT = '0001'
      LEFT JOIN NSDM_V_MARD Nmard 
                             ON Nmard.MATNR = w.ARTNR 
                            AND Nmard.WERKS = w.FILIA 
                            AND Nmard.LGORT = '0001'
      LEFT JOIN MARA       ON MARA.MATNR = w.ARTNR 
                           AND MARA.MTART = 'Z100' 
                           AND MARA.ATTYP = '12'
      LEFT JOIN MAKT       ON MAKT.MATNR = w.ARTNR 
                           AND MAKT.SPRAS = 'E'
      INNER JOIN MVKE       ON MVKE.MATNR = MARA.MATNR
                           AND MVKE.VKORG = '5998'
                           AND MVKE.VTWEG = '10'
                           AND SUBSTRING(MVKE.PRODH,5,1) IN ('1','3')
      LEFT JOIN T024        ON T024.EKGRP = MVKE.ZZPRGRP
      LEFT JOIN ZP2P_PO_DATA po 
                           ON po.MATNR = w.ARTNR 
                          AND po.WERKS = dc.WERKS 
                          AND po.EKORG = '5998'

      -- ←←← join the flag CTE ←←←
      LEFT JOIN listing_per_dc lpd 
        ON lpd.ARTNR = w.ARTNR 
       AND lpd.DC    = dc.WERKS

    WHERE
      
      dc.MMSTA IN ('20','21','30')
      AND dc.MMSTD  < ADD_DAYS(CURRENT_DATE,-7)
      AND Nmard.LABST < 10
--     AND mard.LABST = 0
      AND NOT EXISTS (
      SELECT 1
      FROM ZP2P_PO_DATA po_check
      WHERE po_check.MATNR = w.ARTNR
        AND po_check.WERKS = dc.WERKS
        AND po_check.LOEKZ <> 'L'
        AND (po_check.ELIKZ = '' or po_check.BWART is null)
        AND po_check.EINDT > ADD_DAYS(CURRENT_DATE, -30)
    )
),

  numbered AS (
    SELECT
      bd.*,
      ROW_NUMBER() OVER (
        PARTITION BY Display_ID, DC
        ORDER BY PODeliveryDate DESC
      ) AS rn
    FROM base_data bd
  )

SELECT
  BuyingDirector,
  Display_ID,
  Product_Description,
Hierarchy,
CASE
    WHEN AnyStoreValidListingFlag = 1 THEN 'Y'
    ELSE 'N'
  END AS StoreListed,

  CASE WHEN AllStoresStatus30Flag    = 1 THEN 'Y' ELSE 'N' END
    AS AllStoresHaveStatus30,
  DC,
  DC_Status,
  DCStatusValidFrom,
  Store,
  Store_Status,
  StoreStatusValidFrom,
--  MARD_DC_Stock,
  DC_Stock,
  OpenPos,
  LatestPO,
  PODeliveryDate  

FROM numbered
WHERE rn = 1   
  AND AnyStoreValidListingFlag = 1
  AND AllStoresStatus30Flag    = 1
ORDER BY BuyingDirector, Display_ID;
