let
    // 1. Load CSV from SharePoint
    Source = SharePoint.Files(
        "https://asgportal.sharepoint.com/sites/5999-com-0158",
        [ApiVersion = 15]
    ),
    FilterToCSV = Table.SelectRows(
        Source,
        each Text.Contains([Folder Path], "Website/00 Admin/Reports/Data Tables")
            and [Name] = "publishedOffers.csv"
    ),
    CsvFileRow =
        if Table.IsEmpty(FilterToCSV) then
            error "publishedOffers.csv not found"
        else
            FilterToCSV{0},

    // 2. Parse CSV and promote headers
    CsvContents = Csv.Document(
        CsvFileRow[Content],
        [Delimiter = ",", Encoding = 65001, QuoteStyle = QuoteStyle.Csv]
    ),
    #"Promoted Headers" = Table.PromoteHeaders(CsvContents, [PromoteAllScalars = true]),

    // 3. Split offer reference into SellableID & StoreID
    #"Split Reference" = Table.SplitColumn(
        #"Promoted Headers",
        "offer reference",
        Splitter.SplitTextByDelimiter("_", QuoteStyle.Csv),
        {"offer reference.1", "offer reference.2"}
    ),
    #"Renamed Columns" = Table.RenameColumns(
        #"Split Reference",
        {{"offer reference.1", "SellableID"}, {"offer reference.2", "StoreID"}}
    ),

    // 4. Safely convert SellableID to number & filter out bad rows
    #"Converted SellableID" = Table.TransformColumns(
        #"Renamed Columns",
        {{"SellableID", each try Number.FromText(Text.Trim(_)) otherwise null, Int64.Type}}
    ),
    #"Filtered Valid SellableID" = Table.SelectRows(
        #"Converted SellableID",
        each [SellableID] <> null
    ),

    // 5. Import region lookup from SQL
    RegionTable = Sql.Database(
        "5909z0ndbsrvt02",
        "BIRD_IDS_DDS",
        [ Query = "
            SELECT
              [AHEAD_Plant_ID]           AS StoreID,
              [Legacy_Region_Name_Short] AS Region
            FROM dds.INT_OBJ_MD_Store
        " ]
    ),

    // 6. Merge region info onto each row and expand
    #"Merged Region" = Table.NestedJoin(
        #"Filtered Valid SellableID",
        "StoreID",
        RegionTable,
        "StoreID",
        "RegionData",
        JoinKind.LeftOuter
    ),
    #"Expanded Region" = Table.ExpandTableColumn(
        #"Merged Region",
        "RegionData",
        {"Region"},
        {"Region"}
    ),

    // 7. Final summary: one row per SellableID with all Regions + total StoreCount
    #"Summary" = Table.Group(
        #"Expanded Region",
        {"SellableID"},
        {
            // Gather unique, non-null Regions
            {"Regions",
             each Text.Combine(
                     List.Sort(
                       List.Distinct(
                         List.RemoveNulls(
                           Table.Column(_, "Region")
                         )
                       )
                     ),
                     ", "
                   ),
             type text
            },
            // Count distinct, non-null StoreIDs
            {"StoreCount",
             each List.Count(
                     List.Distinct(
                       List.RemoveNulls(
                         Table.Column(_, "StoreID")
                       )
                     )
                   ),
             Int64.Type
            }
        }
    ),
 // 8. Define expected regions
    ExpectedRegions = {"BRE", "DAN", "DER", "JKT", "MIN", "PRE", "RGY", "STP"},

    // 9. Add a conditional column to show "ALL" if all expected regions are present
    #"With Region Label" = Table.AddColumn(
        #"Summary",
        "Region Label",
        each 
            let
                ActualRegions = Text.Split([Regions], ", "),
                AllPresent = List.Sort(ActualRegions) = List.Sort(ExpectedRegions)
            in
                if AllPresent then "ALL" else [Regions],
        type text
    ),

    // 10. Remove the original Regions column and rename the new one
    #"Removed Regions" = Table.RemoveColumns(#"With Region Label", {"Regions"}),
    #"Renamed Region Label" = Table.RenameColumns(#"Removed Regions", {{"Region Label", "Regions"}})
in
    #"Renamed Region Label"
